/* =================================================================
 * Divider Component - design-26-production-ready継承版
 * 
 * [概要]
 * design-26-production-ready.htmlの変態的品質レベルを完全継承。
 * セクション間の区切り線を美しく表現するコンポーネント。
 * mockupで実際に使用されている区切り線パターンを汎用化。
 * 
 * [統一仕様]
 * - design-26のプレミアム境界線品質を適用
 * - グラデーション効果による立体感
 * - テキストラベル付き区切り線対応
 * ================================================================= */

/* =================================================================
 * CSS VARIABLES - design-26から完全継承（統一性確保）
 * ================================================================= */
.divider {
  /* CSS変数をローカルで定義（グローバル変数との統一性確保） */
  --premium-border: rgba(116, 192, 252, 0.25);  /* 境界線色 - 控えめな区切り */
  --premium-highlight: rgba(255, 255, 255, 0.15); /* ハイライト色 - エンボス効果 */
  --text-primary: #374151;     /* 主要テキスト - 高コントラスト */
  --text-secondary: #6b7280;   /* 補助テキスト - 中コントラスト */
  --text-tertiary: #9ca3af;    /* 三次テキスト - 低コントラスト */
  --transition-smooth: all 0.15s cubic-bezier(0.4, 0, 0.2, 1); /* スムーズトランジション */

  /* =================================================================
   * BASE DIVIDER STYLES
   * ================================================================= */
  border: none;
  margin: 0;
  padding: 0;
  display: flex;
  align-items: center;
  width: 100%;
}

/* =================================================================
 * ORIENTATION VARIANTS
 * ================================================================= */
.horizontal {
  flex-direction: row;
  height: 1px;
  width: 100%;
}

.vertical {
  flex-direction: column;
  width: 1px;
  height: 100%;
  min-height: 2rem;
}

/* =================================================================
 * STYLE VARIANTS - design-26品質の境界線技術を適用
 * ================================================================= */
.solid {
  background: var(--premium-border);
}

.gradient {
  /* グラデーション区切り線：中央が最も明るい効果 - design-26より */
  background: linear-gradient(90deg, transparent, var(--premium-border), transparent);
}

.highlight {
  /* ハイライト区切り線：上端ハイライト効果 - design-26より */
  background: linear-gradient(90deg, transparent, var(--premium-highlight), transparent);
  position: relative;
}

.highlight::after {
  content: '';
  position: absolute;
  top: 1px;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(90deg, transparent, rgba(0, 0, 0, 0.05), transparent);
}

.dashed {
  background: repeating-linear-gradient(
    to right,
    var(--premium-border),
    var(--premium-border) 8px,
    transparent 8px,
    transparent 16px
  );
}

.dotted {
  background: repeating-linear-gradient(
    to right,
    var(--premium-border),
    var(--premium-border) 3px,
    transparent 3px,
    transparent 8px
  );
}

/* Vertical orientation styles */
.vertical.solid {
  background: var(--premium-border);
}

.vertical.gradient {
  background: linear-gradient(180deg, transparent, var(--premium-border), transparent);
}

.vertical.highlight {
  background: linear-gradient(180deg, transparent, var(--premium-highlight), transparent);
}

.vertical.highlight::after {
  top: 0;
  left: 1px;
  right: auto;
  bottom: 0;
  width: 1px;
  height: auto;
  background: linear-gradient(180deg, transparent, rgba(0, 0, 0, 0.05), transparent);
}

.vertical.dashed {
  background: repeating-linear-gradient(
    to bottom,
    var(--premium-border),
    var(--premium-border) 8px,
    transparent 8px,
    transparent 16px
  );
}

.vertical.dotted {
  background: repeating-linear-gradient(
    to bottom,
    var(--premium-border),
    var(--premium-border) 3px,
    transparent 3px,
    transparent 8px
  );
}

/* =================================================================
 * SIZE VARIANTS
 * ================================================================= */
.thin {
  height: 1px;
}

.medium {
  height: 2px;
}

.thick {
  height: 3px;
}

.vertical.thin {
  width: 1px;
}

.vertical.medium {
  width: 2px;
}

.vertical.thick {
  width: 3px;
}

/* =================================================================
 * SPACING VARIANTS
 * ================================================================= */
.spacingSmall {
  margin: 0.5rem 0;
}

.spacingMedium {
  margin: 1rem 0;
}

.spacingLarge {
  margin: 1.5rem 0;
}

.spacingExtraLarge {
  margin: 2rem 0;
}

.vertical.spacingSmall {
  margin: 0 0.5rem;
}

.vertical.spacingMedium {
  margin: 0 1rem;
}

.vertical.spacingLarge {
  margin: 0 1.5rem;
}

.vertical.spacingExtraLarge {
  margin: 0 2rem;
}

/* =================================================================
 * LABELED DIVIDER - テキストラベル付き区切り線
 * ================================================================= */
.withLabel {
  background: none;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  font-family: 'IBM Plex Sans JP', sans-serif;
}

.withLabel::before {
  content: '';
  flex: 1;
  height: 1px;
  background: var(--premium-border);
}

.withLabel::after {
  content: '';
  flex: 1;
  height: 1px;
  background: var(--premium-border);
}

.labelText {
  padding: 0 1rem;
  background: inherit;
  color: var(--text-secondary);
  font-size: 0.875rem;
  font-weight: 500;
  white-space: nowrap;
}

/* Label with gradient lines */
.withLabel.gradient::before {
  background: linear-gradient(90deg, transparent, var(--premium-border));
}

.withLabel.gradient::after {
  background: linear-gradient(90deg, var(--premium-border), transparent);
}

/* =================================================================
 * COLOR VARIANTS - セマンティックカラー
 * ================================================================= */
.primary {
  --divider-color: rgba(116, 192, 252, 0.3);
}

.secondary {
  --divider-color: rgba(247, 147, 26, 0.3);
}

.accent {
  --divider-color: rgba(230, 73, 128, 0.3);
}

.success {
  --divider-color: rgba(16, 185, 129, 0.3);
}

.warning {
  --divider-color: rgba(245, 158, 11, 0.3);
}

.error {
  --divider-color: rgba(220, 38, 38, 0.3);
}

.neutral {
  --divider-color: var(--premium-border);
}

.primary.solid,
.secondary.solid,
.accent.solid,
.success.solid,
.warning.solid,
.error.solid,
.neutral.solid {
  background: var(--divider-color);
}

.primary.gradient {
  background: linear-gradient(90deg, transparent, var(--divider-color), transparent);
}

.secondary.gradient {
  background: linear-gradient(90deg, transparent, var(--divider-color), transparent);
}

.accent.gradient {
  background: linear-gradient(90deg, transparent, var(--divider-color), transparent);
}

.success.gradient {
  background: linear-gradient(90deg, transparent, var(--divider-color), transparent);
}

.warning.gradient {
  background: linear-gradient(90deg, transparent, var(--divider-color), transparent);
}

.error.gradient {
  background: linear-gradient(90deg, transparent, var(--divider-color), transparent);
}

.neutral.gradient {
  background: linear-gradient(90deg, transparent, var(--divider-color), transparent);
}

/* =================================================================
 * RESPONSIVE OPTIMIZATIONS - モバイル最適化
 * ================================================================= */
@media (max-width: 480px) {
  .labelText {
    font-size: 0.8rem;
    padding: 0 0.75rem;
  }
  
  .spacingLarge {
    margin: 1rem 0;
  }
  
  .spacingExtraLarge {
    margin: 1.5rem 0;
  }
}

/* =================================================================
 * ACCESSIBILITY - design-26から継承
 * ================================================================= */
@media (prefers-contrast: high) {
  .divider {
    --premium-border: rgba(0, 0, 0, 0.5);
  }
  
  .thick {
    height: 4px;
  }
  
  .vertical.thick {
    width: 4px;
  }
}

/* =================================================================
 * ANIMATION SUPPORT
 * ================================================================= */
.animated {
  position: relative;
  overflow: hidden;
}

.animated::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.4),
    transparent
  );
  animation: shimmer 2s infinite;
}

@keyframes shimmer {
  0% {
    left: -100%;
  }
  100% {
    left: 100%;
  }
}

@media (prefers-reduced-motion: reduce) {
  .animated::before {
    animation: none;
  }
}