/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as VoiceInputRouteImport } from './routes/voice-input'
import { Route as SettingsRouteImport } from './routes/settings'
import { Route as RealtimeDebugRouteImport } from './routes/realtime-debug'
import { Route as MarkdownDocumentRouteImport } from './routes/markdownDocument'
import { Route as IndexRouteImport } from './routes/index'

const VoiceInputRoute = VoiceInputRouteImport.update({
  id: '/voice-input',
  path: '/voice-input',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const RealtimeDebugRoute = RealtimeDebugRouteImport.update({
  id: '/realtime-debug',
  path: '/realtime-debug',
  getParentRoute: () => rootRouteImport,
} as any)
const MarkdownDocumentRoute = MarkdownDocumentRouteImport.update({
  id: '/markdownDocument',
  path: '/markdownDocument',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/markdownDocument': typeof MarkdownDocumentRoute
  '/realtime-debug': typeof RealtimeDebugRoute
  '/settings': typeof SettingsRoute
  '/voice-input': typeof VoiceInputRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/markdownDocument': typeof MarkdownDocumentRoute
  '/realtime-debug': typeof RealtimeDebugRoute
  '/settings': typeof SettingsRoute
  '/voice-input': typeof VoiceInputRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/markdownDocument': typeof MarkdownDocumentRoute
  '/realtime-debug': typeof RealtimeDebugRoute
  '/settings': typeof SettingsRoute
  '/voice-input': typeof VoiceInputRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/markdownDocument'
    | '/realtime-debug'
    | '/settings'
    | '/voice-input'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/markdownDocument'
    | '/realtime-debug'
    | '/settings'
    | '/voice-input'
  id:
    | '__root__'
    | '/'
    | '/markdownDocument'
    | '/realtime-debug'
    | '/settings'
    | '/voice-input'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MarkdownDocumentRoute: typeof MarkdownDocumentRoute
  RealtimeDebugRoute: typeof RealtimeDebugRoute
  SettingsRoute: typeof SettingsRoute
  VoiceInputRoute: typeof VoiceInputRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/voice-input': {
      id: '/voice-input'
      path: '/voice-input'
      fullPath: '/voice-input'
      preLoaderRoute: typeof VoiceInputRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/realtime-debug': {
      id: '/realtime-debug'
      path: '/realtime-debug'
      fullPath: '/realtime-debug'
      preLoaderRoute: typeof RealtimeDebugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/markdownDocument': {
      id: '/markdownDocument'
      path: '/markdownDocument'
      fullPath: '/markdownDocument'
      preLoaderRoute: typeof MarkdownDocumentRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MarkdownDocumentRoute: MarkdownDocumentRoute,
  RealtimeDebugRoute: RealtimeDebugRoute,
  SettingsRoute: SettingsRoute,
  VoiceInputRoute: VoiceInputRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
